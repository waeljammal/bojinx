<?xml version="1.0" encoding="utf-8"?>
<!---
@manifest
-->
<s:Skin xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:gr="mx.graphics.*"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		alpha.disabled="0.5" width="100%" height="100%">

	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("com.bojinx.dialog.ui.DefaultFlexDialogWindow")]
		]]>
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			/*============================================================================*/
			/*= PROTECTED METHODS                                                         */
			/*============================================================================*/
			
			/**
			 *  @private
			 */
			override protected function updateDisplayList( unscaledWidth:Number, unscaledHeight:Number ):void
			{
				// Push backgroundColor and backgroundAlpha directly.
				// Handle undefined backgroundColor by hiding the background object.
				if ( isNaN( getStyle( "backgroundColor" )))
				{
					background.visible = false;
				}
				else
				{
					background.visible = true;
					bgFill.color = getStyle( "backgroundColor" );
					bgFill.alpha = getStyle( "backgroundAlpha" );
				}
				
				super.updateDisplayList( unscaledWidth, unscaledHeight );
			}
		]]>
	</fx:Script>

	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
		<s:State name="closed" stateGroups="closedGroup" />
		<s:State name="disabledAndClosed" stateGroups="closedGroup" />
	</s:states>

	<!--- Defines the background and content group used by this skin. -->
	<s:Group id="chrome" left="0" right="0" top="0" bottom="0">

		<!--- Defines the appearance of the SkinnablePopUpContainer class's background. -->
		<s:Rect id="background" left="0" right="0" top="0" bottom="0">
			<s:fill>
				<!--- @private -->
				<s:SolidColor id="bgFill" color="#000000" />
			</s:fill>
		</s:Rect>

		<!--
		Note: Setting the minimum size to 0 here so that changes to the host component's
		size will not be thwarted by this skin part's minimum size.   This is a compromise,
		more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
		-->
		<!--- @copy spark.components.SkinnableContainer#contentGroup -->
		<s:Group id="contentGroup" left="0" right="0" top="0" bottom="0" minWidth="0" minHeight="0">
			<s:layout>
				<s:BasicLayout />
			</s:layout>
		</s:Group>
	</s:Group>

</s:Skin>
